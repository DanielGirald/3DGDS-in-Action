name: 'GDS 2D and 3D'

on:
  push:
    branches:
      - main

jobs:
  GDS2PNG:
    runs-on: ubuntu-20.04  # Configuración para Ubuntu 20.04

    steps:

    - name: Check out repository
      uses: actions/checkout@v4

    # Install packages for 'Render PNG from GDS' step:
    - name: Install prerequisites
      uses: awalsh128/cache-apt-pkgs-action@latest
      with:
        packages: librsvg2-bin pngquant cairosvg
        version: test

    - name: Install Python dependencies
      run: |
        python3 -m pip install --upgrade pip
        python3 -m pip install gdstk

    - name: Copy GDS
      run: |
        mkdir gds
        cp build/*.gds gds/

    - name: Use gds2png script
      run: |
        python3 gds2png.py

    - name: Upload gds_render (png) artifact
      uses: actions/upload-artifact@v4
      with:
        name: gds_render_png
        path: 'gds_render.png'

#    - name: Upload GDS files artifact
#      uses: actions/upload-artifact@v4
#      with:
#        name: gds_files
#        path: '*.gds'

  GDS2gTLF:
    runs-on: ubuntu-20.04  # Configuración para Ubuntu 20.04
    needs: GDS2PNG

    steps:
    - name: Check out repository
      uses: actions/checkout@v4

    - name: GDS3D
      uses: actions/checkout@v4
      with:
        repository: mbalestrini/GDS2glTF
        path: GDS2glTF_repo

    - name: Python version
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        cache: 'pip'

    - name: Install Python dependencies
      run: |
        python -m pip install numpy gdspy triangle pygltflib

#    - name: Download GDS files artifact
#      uses: actions/download-artifact@v4
#      with:
#        name: gds_files

    - name: Check files
      run: |
        echo 'Main'
        ls
        echo "Build folder"
        ls ./build/

    - name: Rename GDS file
      run: |
        GDS_FILE=$(ls ./build/*.gds | head -n 1) 
        if [ -z "$GDS_FILE" ]; then
          echo "Error: No GDS file found in the gds/ directory."
          exit 1
        fi
        cp "$GDS_FILE" render.gds

    - name: Convert GDS to GLTF
      run: |
        cd GDS2glTF_repo
        python3 gds2gltf.py ${{ github.workspace }}/build/render.gds

    - name: Check files
      run: |
        echo ">> Main"
        ls
        echo ">> GDS2glTF_repo folder"
        ls GDS2glTF_repo


    - name: Upload gds_render (gtlf) artifact
      uses: actions/upload-artifact@v4
      with:
        name: gds_render_gtlf
        path: 'render.gds.gltf'

  GithubSite:
    runs-on: ubuntu-20.04  # Configuración para Ubuntu 20.04
    needs: GDS2gTLF

    steps: 
    - name: Check out repository
      uses: actions/checkout@v4

    - name: Download gds_render (png) artifact
      uses: actions/download-artifact@v4
      with:
        name: gds_render_png
        path: './build/gds_render.png'

    - name: Download gds_render (gtlf) artifact
      uses: actions/download-artifact@v4
      with:
        name: gds_render_gtlf
        path: './build/render.gds.gltf'

    - name: Subir Pagina
      uses: actions/upload-pages-artifact@v1
      with:
        path: 'build'
    
    - name: Compartir con Github-Pages
      id: deployment
      uses: actions/deploy-pages@v2

    - name: Summary
      shell: bash
      run: |
        PAGE_URL=${{ steps.deployment.outputs.page_url }}
        PAGE_URL=$(echo "$PAGE_URL" | sed -e 's/\/$//')
        cat << EOF >> $GITHUB_STEP_SUMMARY
        # 3D Viewer
        [open 3D viewer](https://gds-viewer.tinytapeout.com/?model=$PAGE_URL/tinytapeout.gds.gltf)

        # 2D Preview
        ![png]($PAGE_URL/gds_render.png)
        EOF
